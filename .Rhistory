"schwaebisch","vorarlberg","keinen"))
p5 <- ggplot(data = dp5, aes(x = te_dialekte_1, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Dialekte") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Welche Dialekte sprechen Sie?") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("dialektesprechen.pdf")
View(dp5)
dp5 <- data_all %>% select(.,c("sdf_wohnort","te_dialekte_1"))
#remove na values
dp5 <- na.omit(dp5) %>%
group_by(sdf_wohnort,te_dialekte_1) %>% summarise(occurences = n()) %>%
filter(.,sdf_wohnort != "sonstiges")
dp5 <- dp5 %>% mutate(
percent = round((occurences/sum(occurences))*100,2)
)
# reordering the levels
dp5$te_dialekte_1 <- factor(dp5$te_dialekte_1, levels = c("bodensee_alemannisch","liechtensteiner",
"schwaebisch","vorarlberg","keinen"))
p5 <- ggplot(data = dp5, aes(x = te_dialekte_1, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Dialekte") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Welche Dialekte sprechen Sie?") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("dialektesprechen.pdf")
dp5 <- data_all %>% select(.,c("sdf_wohnort","te_dialekte_1"))
#remove na values
dp5 <- na.omit(dp5) %>%
group_by(sdf_wohnort,te_dialekte_1) %>% summarise(occurences = n()) %>%
filter(.,sdf_wohnort != "sonstiges")
dp5 <- dp5 %>% mutate(
percent = round((occurences/sum(occurences))*100,2)
)
# reordering the levels
dp5$te_dialekte_1 <- factor(dp5$te_dialekte_1, levels = c("bodensee_alemannisch","liechtensteiner",
"schwaebisch","vorarlberg","keinen"))
p5 <- ggplot(data = dp5, aes(x = te_dialekte_1, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Dialekte") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Welche Dialekte sprechen Sie?") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("dialektesprechen.pdf")
View(dp5)
dp5$te_dialekte_1<-na.omit(dp5$te_dialekte_1)
dp5 <- data_all %>% select(.,c("sdf_wohnort","te_dialekte_1"))
#remove na values
dp5 <- na.omit(dp5) %>%
group_by(sdf_wohnort,te_dialekte_1) %>% summarise(occurences = n()) %>%
filter(.,sdf_wohnort != "sonstiges")
dp5 <- dp5 %>% mutate(
percent = round((occurences/sum(occurences))*100,2)
)
# reordering the levels
dp5$te_dialekte_1 <- factor(dp5$te_dialekte_1, levels = c("bodensee_alemannisch","liechtensteiner",
"schwaebisch","vorarlberg","keinen"))
p5 <- ggplot(data = dp5, aes(x = te_dialekte_1, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Dialekte") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Welche Dialekte sprechen Sie?") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("dialektesprechen.pdf")
dp5 <- data_all %>% select(.,c("sdf_wohnort","te_dialekte_1"))
dp5 <- na.omit(dp5)
View(dp5)
dp5 <- dp5 %>%
group_by(sdf_wohnort,te_dialekte_1) %>% summarise(occurences = n()) %>%
filter(.,sdf_wohnort != "sonstiges")
View(dp5)
dp5 <- dp5 %>% mutate(
percent = round((occurences/sum(occurences))*100,2)
)
dp5 <- data_all %>% select(.,c("sdf_wohnort","te_dialekte_1"))
#remove na values
dp5 <- na.omit(dp5)
dp5 <- dp5 %>%
group_by(sdf_wohnort,te_dialekte_1) %>% summarise(occurences = n()) %>%
filter(.,sdf_wohnort != "sonstiges")
dp5 <- dp5 %>% mutate(
percent = round((occurences/sum(occurences))*100,2)
)
# reordering the levels
dp5$te_dialekte_1 <- factor(dp5$te_dialekte_1, levels = c("bodensee_alemannisch","liechtensteiner",
"schwaebisch","vorarlberg","keinen"))
p5 <- ggplot(data = dp5, aes(x = te_dialekte_1, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Dialekte") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Welche Dialekte sprechen Sie?") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("dialektesprechen.pdf")
View(dp5)
dp5 <- data_all %>% select(.,c("sdf_wohnort","te_dialekte_1"))
View(dp5)
dp5 <- na.omit(dp5)
dp5 <- dp5 %>%
group_by(sdf_wohnort,te_dialekte_1) %>% summarise(occurences = n()) %>%
filter(.,sdf_wohnort != "sonstiges")
dp5 <- dp5 %>% mutate(
percent = round((occurences/sum(occurences))*100,2)
)
p5 <- ggplot(data = dp5, aes(x = te_dialekte_1, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Dialekte") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Welche Dialekte sprechen Sie?") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("dialektesprechen.pdf")
p5 <- ggplot(data = dp5, aes(x = te_dialekte_1, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Dialekte") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Welche Dialekte sprechen Sie?") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("dialektesprechen.pdf")
dp5 <- data_all %>% select(.,c("sdf_wohnort","te_dialekte_1"))
#remove na values
dp5 <- na.omit(dp5)
dp5 <- dp5 %>%
group_by(sdf_wohnort,te_dialekte_1) %>% summarise(occurences = n()) %>%
filter(.,sdf_wohnort != "sonstiges")
dp5 <- dp5 %>% mutate(
percent = round((occurences/sum(occurences))*100,2)
)
# reordering the levels
dp5$te_dialekte_1 <- factor(dp5$te_dialekte_1, levels = c("bodensee_alemannisch","hochalemannisch",
"liechtensteiner",
"schwaebisch","vorarlberg","keinen"))
p5 <- ggplot(data = dp5, aes(x = te_dialekte_1, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Dialekte") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Welche Dialekte sprechen Sie?") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("dialektesprechen.pdf")
dp5 <- data_all %>% select(.,c("sdf_wohnort","te_dialekte_1"))
#remove na values
dp5 <- na.omit(dp5)
dp5 <- dp5 %>%
group_by(sdf_wohnort,te_dialekte_1) %>% summarise(occurences = n()) %>%
filter(.,sdf_wohnort != "sonstiges")
dp5 <- dp5 %>% mutate(
percent = round((occurences/sum(occurences))*100,2)
)
# reordering the levels
dp5$te_dialekte_1 <- factor(dp5$te_dialekte_1, levels = c("bodensee_alemannisch","hochalemannisch","schwaebisch",
"liechtensteiner",
"hochalemannisch", "vorarlberg","keinen"))
dp5 <- data_all %>% select(.,c("sdf_wohnort","te_dialekte_1"))
#remove na values
dp5 <- na.omit(dp5)
dp5 <- dp5 %>%
group_by(sdf_wohnort,te_dialekte_1) %>% summarise(occurences = n()) %>%
filter(.,sdf_wohnort != "sonstiges")
dp5 <- dp5 %>% mutate(
percent = round((occurences/sum(occurences))*100,2)
)
# reordering the levels
dp5$te_dialekte_1 <- factor(dp5$te_dialekte_1, levels = c("bodensee_alemannisch","schwaebisch",
"liechtensteiner",
"hochalemannisch", "vorarlberg","keinen"))
p5 <- ggplot(data = dp5, aes(x = te_dialekte_1, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Dialekte") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Welche Dialekte sprechen Sie?") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("dialektesprechen.pdf")
names(data_all)
View(dp2)
View(dp3_ch)
View(dp2_ohne)
dp2_ohne
dp2_fokus <- filter(data_02, hf_tourist_einheimisch == "ja")
# grouping the data
dp2_fokus <- dp2_fokus %>% group_by(sdf_wohnort,hf_einheit) %>% summarise(occurences = n())
View(dp2_fokus)
dp2_fokus <- dp2_fokus %>% group_by(sdf_wohnort,hf_einheit) %>% summarise(occurences = n()) %>%
na.omit(.)
View(dp2_fokus)
dp2_fokus <- filter(data_02, hf_tourist_einheimisch == "ja")
dp2_fokus <- dp2_fokus %>% group_by(sdf_wohnort,hf_einheit) %>% summarise(occurences = n())
View(dp2_fokus)
dp2_ch <- dp2_fokus %>% filter(., sdf_wohnort == "ch") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
View(dp2_ch)
View(dp2_fokus)
dp2_fokus <- filter(data_02, hf_tourist_einheimisch == "ja")
# grouping the data
dp2_fokus <- dp2_fokus %>% group_by(sdf_wohnort,hf_einheit) %>% summarise(occurences = n())
dp2_ch <- dp2_fokus %>% filter(., sdf_wohnort == "ch") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_au <- dp2_fokus %>% filter(., sdf_wohnort == "au") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_de <- dp2_fokus %>% filter(., sdf_wohnort == "de") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_fokus <- rbind(dp3_au,dp3_ch,dp3_de)
View(dp2_au)
View(dp2_de)
View(dp2_fokus)
dp2_fokus <- filter(data_02, hf_tourist_einheimisch == "ja")
# grouping the data
dp2_fokus <- dp2_fokus %>% group_by(sdf_wohnort,hf_einheit) %>% summarise(occurences = n())
dp2_ch <- dp2_fokus %>% filter(., sdf_wohnort == "ch") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_au <- dp2_fokus %>% filter(., sdf_wohnort == "au") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_de <- dp2_fokus %>% filter(., sdf_wohnort == "de") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_fokus <- rbind(dp2_au,dp2_ch,dp2_de)
View(dp2_fokus)
View(dp2_fokus)
ggplot(data = dp2_fokus, aes(x = hf_einheit, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Bereitschaft wegzuziehen") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
dp2_fokus <- filter(data_02, hf_tourist_einheimisch == "ja")
# grouping the data
dp2_fokus <- dp2_fokus %>% group_by(sdf_wohnort,hf_einheit) %>% summarise(occurences = n())
dp2_ch <- dp2_fokus %>% filter(., sdf_wohnort == "ch") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_au <- dp2_fokus %>% filter(., sdf_wohnort == "au") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_de <- dp2_fokus %>% filter(., sdf_wohnort == "de") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_fokus <- rbind(dp2_au,dp2_ch,dp2_de)
p2_fokus <- ggplot(data = dp2_fokus, aes(x = hf_einheit, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Wohnort") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("einheitwohnort_Fokus_Laender.pdf")
# making it clearer
dp2_fokus$hf_einheit[dp2_fokus$hf_einheit == "ja"] <- "Einheit"
dp2_fokus$hf_einheit[dp2_fokus$hf_einheit == "nein"] <- "Keine Einheit"
dp2_fokus <- filter(data_02, hf_tourist_einheimisch == "ja")
# grouping the data
dp2_fokus <- dp2_fokus %>% group_by(sdf_wohnort,hf_einheit) %>% summarise(occurences = n())
dp2_ch <- dp2_fokus %>% filter(., sdf_wohnort == "ch") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_au <- dp2_fokus %>% filter(., sdf_wohnort == "au") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_de <- dp2_fokus %>% filter(., sdf_wohnort == "de") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_fokus <- rbind(dp2_au,dp2_ch,dp2_de)
# making it clearer
dp2_fokus$hf_einheit[dp2_fokus$hf_einheit == "ja"] <- "Einheit"
dp2_fokus$hf_einheit[dp2_fokus$hf_einheit == "nein"] <- "Keine Einheit"
p2_fokus <- ggplot(data = dp2_fokus, aes(x = hf_einheit, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Wohnort") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("einheitwohnort_Fokus_Laender.pdf")
dp2_fokus <- filter(data_02, hf_tourist_einheimisch == "ja")
# grouping the data
dp2_fokus <- dp2_fokus %>% group_by(sdf_wohnort,hf_einheit) %>% summarise(occurences = n())
dp2_ch <- dp2_fokus %>% filter(., sdf_wohnort == "ch") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_au <- dp2_fokus %>% filter(., sdf_wohnort == "au") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_de <- dp2_fokus %>% filter(., sdf_wohnort == "de") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_fokus <- rbind(dp2_au,dp2_ch,dp2_de)
# making it clearer
dp2_fokus$hf_einheit[dp2_fokus$hf_einheit == "ja"] <- "Einheit"
dp2_fokus$hf_einheit[dp2_fokus$hf_einheit == "nein"] <- "Keine Einheit"
p2_fokus <- ggplot(data = dp2_fokus, aes(x = hf_einheit, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Wohnort") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Wahrnehmung der Bodenseeregion als Einheit (**Fokus auf die Länder**)") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("einheitwohnort_Fokus_Laender.pdf")
library(readr)
library(ggplot2)
library(dplyr)
library(readxl)
library(reshape)
library(tidyr)
data_all <- read_xlsx("../data/DatenbefragungAll_xlsx.xlsx")
data_01 <- data_all %>% select(., c("hf_einheit","sdf_geschlecht","sdf_jahrgang","hf_tourist_einheimisch",
"sdf_wohnort", "te_wegzug"))
## Einheit _ Keine Einheit für Tourists und Einheimisch
dp1 <- data_01 %>% select(c("hf_einheit","sdf_jahrgang"))
dp1 <- dp1 %>% group_by(sdf_jahrgang,hf_einheit) %>% summarise(occurences = n())
# calculating percentages
dp1 <- dp1 %>% mutate(
percent = round((occurences / 543)*100,2))
#
# # Einheit
# dp1_eiheit <- dp1 %>% filter(.,hf_einheit == "ja")
# dp1_eiheit$sdf_jahrgang <- factor(dp1_eiheit$sdf_jahrgang, levels = c("<18","18_29","30_60",">60","NA"))
# p_einheit <- ggplot(dp1_eiheit, aes(sdf_jahrgang,percent)) + geom_col()
# p_einheit + colScale
#
#
# # Keine Einheit
# dp1_keine <- dp1 %>% filter(.,hf_einheit == "nein")
# dp1_keine$sdf_jahrgang <- factor(dp1_keine$sdf_jahrgang, levels = c("<18","18_29","30_60",">60","NA"))
# p_keine <- ggplot(dp1_keine, aes(sdf_jahrgang,percent)) + geom_col() + theme_minimal()
dp1$sdf_jahrgang <- factor(dp1$sdf_jahrgang, levels = c("<18","18_29","30_60",">60","NA"))
### custom color scale and text configuration
css <- scale_fill_manual(values = c("steelblue2", "firebrick2","red"),
labels = c("Einheit", "Keine Einheit", "Kein Wert"))
css2 <- scale_fill_manual(values = c("steelblue2", "firebrick2"),
labels = c("Einheit", "Keine Einheit"))
###
p1 <- ggplot(data = dp1, aes(x = sdf_jahrgang, y = percent, fill = hf_einheit)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Altersgruppe ") + ylab("Prozent %") +
ggtitle("Wahrnehmung der Bodensseeregion als eine Einheit (Einheimische und Touristen)") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css
ggsave("einheit_all.pdf")
## Ohne NA Werte -- the NA values are considered within the precentage calculation though
dp1_ohne <- na.omit(dp1)
p1_ohne <- ggplot(data = dp1_ohne, aes(x = sdf_jahrgang, y = percent, fill = hf_einheit)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Altersgruppe ") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Wahrnehmung der Bodensseeregion als eine Einheit (Einheimische und Touristen)") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10, face = "bold")) + css2
ggsave("einheit_all_ohneNA.pdf")
data_02 <- data_all %>% select(., c("hf_einheit","hf_tourist_einheimisch","sdf_wohnort"))
# selecting only the Einheimisch
dp2 <- filter(data_02, hf_tourist_einheimisch == "ja")
# grouping the data
dp2 <- dp2 %>% group_by(sdf_wohnort,hf_einheit) %>% summarise(occurences = n())
dp2 <- dp2 %>% mutate(
percent = round((occurences/232)*100,2)
)
# Plot ohne NAs -- only for the visualisation
dp2_ohne <- na.omit(dp2) %>%
filter(.,sdf_wohnort != "sonstiges")
#restructuring a little bit
dp2$hf_einheit[dp2$hf_einheit == "ja"] <- "Einheit"
dp2$hf_einheit[dp2$hf_einheit == "nein"] <- "Keine Einheit"
dp2$hf_einheit[is.na(dp2$hf_einheit)] <- "NA"
##
# for the one w/o NAs
dp2_ohne$hf_einheit[dp2_ohne$hf_einheit == "ja"] <- "Einheit"
dp2_ohne$hf_einheit[dp2_ohne$hf_einheit == "nein"] <- "Keine Einheit"
## STYLING
css3 <- scale_fill_manual(values = c("gray61", "firebrick4","gray15","gray92","snow2"),
labels = c("Österreich", "Schweiz", "Deutschland", "sonstiges", "na"))
css4 <- scale_fill_manual(values = c("gray61", "firebrick4","gray15"),
labels = c("Österreich", "Schweiz", "Deutschland"))
# Plot with NAs
p2 <- ggplot(data = dp2, aes(x = hf_einheit, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Wohnort ") + ylab("Prozent %") +
ggtitle("Wahrnehmung der Bodenseeregion als Einheit (Einheimische)") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css3
ggsave("einheit_wohnort.pdf")
p2_ohne <- ggplot(data = dp2_ohne, aes(x = hf_einheit, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Wohnort ") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Wahrnehmung der Bodenseeregion als Einheit (Einheimische)") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("einheit_wohnort_ohne.pdf")
dp2_fokus <- filter(data_02, hf_tourist_einheimisch == "ja")
# grouping the data
dp2_fokus <- dp2_fokus %>% group_by(sdf_wohnort,hf_einheit) %>% summarise(occurences = n())
dp2_ch <- dp2_fokus %>% filter(., sdf_wohnort == "ch") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_au <- dp2_fokus %>% filter(., sdf_wohnort == "au") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_de <- dp2_fokus %>% filter(., sdf_wohnort == "de") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp2_fokus <- rbind(dp2_au,dp2_ch,dp2_de)
# making it clearer
dp2_fokus$hf_einheit[dp2_fokus$hf_einheit == "ja"] <- "Einheit"
dp2_fokus$hf_einheit[dp2_fokus$hf_einheit == "nein"] <- "Keine Einheit"
p2_fokus <- ggplot(data = dp2_fokus, aes(x = hf_einheit, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Wohnort") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Wahrnehmung der Bodenseeregion als Einheit (**Fokus auf die Länder**)") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("einheitwohnort_Fokus_Laender.pdf")
data_03 <- data_all %>% select(., c("sdf_wohnort", "te_wegzug"))
# cleaning
dp3 <- data_03 %>% filter(., sdf_wohnort != "NA") %>%
group_by(sdf_wohnort,te_wegzug) %>% summarise(occurences = n())
dp3 <- dp3 %>% mutate(
percent = round((occurences/295)*100,2)
) %>% filter(.,sdf_wohnort !="sonstiges")
# removing NA values
dp3_ohne <- na.omit(dp3)
p3_ohne <- ggplot(data = dp3_ohne, aes(x = te_wegzug, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Bereitschaft wegzuziehen") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Bereitschaft aus der Bodenseeregion wegzuziehen") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("wegziehen_wohnort_ohne.pdf")
dp3_ch <- dp3 %>% filter(., sdf_wohnort == "ch") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp3_au <- dp3 %>% filter(., sdf_wohnort == "au") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp3_de <- dp3 %>% filter(., sdf_wohnort == "de") %>% na.omit(.) %>%
mutate(percent = round((occurences/sum(occurences))*100,2))
dp3_fokus <- rbind(dp3_au,dp3_ch,dp3_de)
p3_fokus <- ggplot(data = dp3_fokus, aes(x = te_wegzug, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Bereitschaft wegzuziehen") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Bereitschaft aus der Bodenseeregion wegzuziehen (**Fokus auf die Länder**)") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("wegziehen_wohnort_Fokus_Laender.pdf")
dp4 <- data_all %>% select(., c("sdf_wohnort", "te_verein")) %>%
group_by(sdf_wohnort,te_verein) %>% summarise(occurences = n())
te_verein <- unlist(strsplit(dp4$te_verein, ",")) %>% as.data.frame()
names(te_verein) <- "Verein"
te_verein <- table(te_verein) %>% as.data.frame()
te_verein$te_verein <- as.character(te_verein$te_verein)
te_verein <- te_verein %>% mutate(
percent = round((Freq/sum(Freq)*100),2)
)
# Assign the correct names to each of the "Verein" types
te_verein$te_verein[te_verein$te_verein == "te_vereine_0"] <- "Fastnachts- / Narrenverein"
te_verein$te_verein[te_verein$te_verein == "te_vereine_1"] <- "Anderer Traditionsverein"
te_verein$te_verein[te_verein$te_verein == "te_vereine_2"] <- "Sportverein"
te_verein$te_verein[te_verein$te_verein == "te_vereine_3"] <- "Kulturverein"
te_verein$te_verein[te_verein$te_verein == "te_vereine_4"] <- "Umwelt und Naturschutzverein"
te_verein$te_verein[te_verein$te_verein == "te_vereine_5"] <- "Karitativer und humanitärer Verein"
te_verein$te_verein[te_verein$te_verein == "te_vereine_12"] <-"Ich bin in keinem Verein aktiv"
te_verein$te_verein[te_verein$te_verein == "te_vereine_sonstiges"] <-"Sonstiges"
te_verein$te_verein <- factor(te_verein$te_verein,
levels = c("Anderer Traditionsverein","Fastnachts- / Narrenverein",
"Karitativer und humanitärer Verein","Kulturverein",
"Ich bin in keinem Verein aktiv","Umwelt und Naturschutzverein",
"Sportverein","Sonstiges"))
p_verein <- ggplot(te_verein, aes(percent, te_verein,fill=te_verein,alpha = 0.85)) + geom_col()  +
xlab("Prozent %") + ylab(" ") +
geom_text(aes(label = percent), size = 3,hjust=-0.5) +
ggtitle("Aktivität in Vereinen (Gesamt)") + xlim(0,30) +
theme(plot.title = element_text(size = 11, face = "bold"),legend.position="none",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold"))
ggsave("aktivit_vereine.pdf")
dp5 <- data_all %>% select(.,c("sdf_wohnort","te_dialekte_1"))
#remove na values
dp5 <- na.omit(dp5)
dp5 <- dp5 %>%
group_by(sdf_wohnort,te_dialekte_1) %>% summarise(occurences = n()) %>%
filter(.,sdf_wohnort != "sonstiges")
dp5 <- dp5 %>% mutate(
percent = round((occurences/sum(occurences))*100,2)
)
# reordering the levels
dp5$te_dialekte_1 <- factor(dp5$te_dialekte_1, levels = c("bodensee_alemannisch","schwaebisch",
"liechtensteiner",
"hochalemannisch", "vorarlberg","keinen"))
p5 <- ggplot(data = dp5, aes(x = te_dialekte_1, y = percent, fill = sdf_wohnort)) +
geom_col(position = "dodge", alpha = 0.8) + xlab("Dialekte") + ylab("Prozent %") +
geom_text(aes(label = percent),
position=position_dodge(width=0.9), size = 3,vjust=-0.5) +
ggtitle("Welche Dialekte sprechen Sie?") +
theme(plot.title = element_text(size = 11, face = "bold"),legend.title = element_blank(), legend.position="bottom",
axis.text.x = element_text(size = 8), axis.title.x = element_text(size = 10,face = "bold"),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10,face = "bold")) + css4
ggsave("dialektesprechen.pdf")
dp1 <- data_01 %>% select(c("hf_einheit","sdf_jahrgang"))
dp1 <- dp1 %>% group_by(sdf_jahrgang,hf_einheit) %>% summarise(occurences = n())
View(dp1)
